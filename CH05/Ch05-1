Ch05-1 원형 연결 리스트
원형 연결 리스트 : 단순 연결 리스트에서 마지막 노드가 첫 번째 노드를 가리켜서 연결의 형태가 원을 이루는 구조
                  사실상 머리와 꼬리의 구분이 없다
머리에 추가한, 꼬리에 추가한 두 연결 리스트의 유일한 차이점은 포인터 변수 head가 무엇을 가리키느냐이다
두 경우의 노드 연결 순서는 같다
  -> 따라서 머리와 꼬리를 가리키는 포인터 변수를 각각 두지 않아도 됨
  
 변형된 원형 연결 리스트
 : 하나의 포인터 변수가 꼬리를 가리키게 함 (tail)
   꼬리 가리키는 포인터변수 : tail  /  머리~ : tail->next
 
 변형된 연결 리스트의 헤더파일
 /* CLinkedList.h */
 #ifdef __C_LINKED_LIST_H__
 #define__C_LINKED_LIST_H__
 
 #define TRUE 1
 #define FALSE 0
 
 typedef struct _node
 {
 	Data data;
	struct _node * next;
} Node;

typedef struct _CLL
{
	Node * tail;
	Node cur;
	Node before;
	int numOfData;
} CList;

typedef CList List;

void ListInt(List * plist);
void LInsert(List * plist, Data data);
void LInsertFront(List * plist, Data data);
 
int LFirst(List * plist, Data data);
int LNext(List *plist, Data data);
Data LRemove(List * plist);
int LCount(List * plist);

#endif
